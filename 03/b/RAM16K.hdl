// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[12..14], a=load0, b=load1, c=load2, d=load3, e=load4, f=load5, g=load6, h=load7);

    RAM4K(in=in, load=load0, address=address[0..11], out=ret0);
    RAM4K(in=in, load=load1, address=address[0..11], out=ret1);
    RAM4K(in=in, load=load2, address=address[0..11], out=ret2);
    RAM4K(in=in, load=load3, address=address[0..11], out=ret3);
    RAM4K(in=in, load=load4, address=address[0..11], out=ret4);
    RAM4K(in=in, load=load5, address=address[0..11], out=ret5);
    RAM4K(in=in, load=load6, address=address[0..11], out=ret6);
    RAM4K(in=in, load=load7, address=address[0..11], out=ret7);

    Mux8Way16(a=ret0, b=ret1, c=ret2, d=ret3, e=ret4, f=ret5, g=ret6, h=ret7, sel=address[12..14], out=out);
}